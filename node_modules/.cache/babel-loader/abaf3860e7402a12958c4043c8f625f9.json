{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saros\\\\Desktop\\\\MMN\\\\mmn\\\\src\\\\components\\\\DateContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Container, ToggleButton, OverlayTrigger, Button, Popover } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateContainer = props => {\n  _s();\n\n  const [votes, setVotes] = useState(props.votes);\n  useEffect(() => {\n    setVotes(props.votes);\n  }, [props.votes]);\n\n  const popover = /*#__PURE__*/_jsxDEV(Popover, {\n    id: \"popover-basic\",\n    children: /*#__PURE__*/_jsxDEV(Popover.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: votes.map((string, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", string, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n\n  const getChecked = () => {\n    return votes.includes(props.username);\n  };\n\n  const setChecked = () => {\n    props.onVote(votes, props.title);\n  };\n\n  const getStyle = () => {\n    if (!getChecked()) {\n      return {\n        width: '18rem'\n      };\n    } else {\n      return {\n        width: '18rem',\n        backgroundColor: 'rgba(63, 127, 191, 0.3)'\n      };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: getStyle(),\n      className: \"m-1 \",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [props.title, \"                     \", /*#__PURE__*/_jsxDEV(ToggleButton, {\n            className: \"mb-6 float-end\",\n            type: \"checkbox\",\n            id: \"button\" + props.index,\n            value: props.index,\n            variant: \"outline-primary\",\n            checked: getChecked(),\n            onChange: e => setChecked(),\n            children: \"I'm in\"\n          }, props.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2\",\n          children: props.recBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), (props.recBy === props.username || props.username === 'Admin') && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => props.onDelete(props.title),\n          variant: \"danger\",\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n          placement: \"right\",\n          trigger: \"click\",\n          overlay: popover,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"float-end\",\n            variant: \"success\",\n            children: [votes.length, \" Votes \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DateContainer, \"bosC+bQWrKbkZBQVliOhY96Enoc=\");\n\n_c = DateContainer;\nDateContainer.defaultProps = {\n  title: 'Date_Title',\n  date: new Date(),\n  recBy: 'person',\n  votes: [\"unos\", \"dos\", \"tres\"]\n};\nexport default DateContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateContainer\");","map":{"version":3,"sources":["C:/Users/saros/Desktop/MMN/mmn/src/components/DateContainer.js"],"names":["React","useState","useEffect","Card","Container","ToggleButton","OverlayTrigger","Button","Popover","DateContainer","props","votes","setVotes","popover","map","string","index","getChecked","includes","username","setChecked","onVote","title","getStyle","width","backgroundColor","e","recBy","onDelete","length","defaultProps","date","Date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Card, Container, ToggleButton, OverlayTrigger, Button, Popover } from \"react-bootstrap\"\r\n\r\nconst DateContainer = (props) => {\r\n\r\n    const [votes, setVotes] = useState(props.votes);\r\n\r\n\r\n    useEffect(() => {\r\n        setVotes(props.votes)\r\n    }, [props.votes])\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Body>\r\n                <label> \r\n                    {votes.map((string, index) => (\r\n                        <div key={index}> {string} </div>\r\n                    ))} \r\n                </label>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n\r\n\r\n    const getChecked = () => {\r\n        return votes.includes(props.username)\r\n    }\r\n\r\n    \r\n    const setChecked = () =>{\r\n        props.onVote(votes, props.title)\r\n    }\r\n\r\n    const getStyle = () => {\r\n        if (!getChecked()){\r\n            return { width: '18rem' }\r\n        }else{\r\n            return {width: '18rem', backgroundColor:'rgba(63, 127, 191, 0.3)' }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className='d-flex justify-content-center'>\r\n            <Card style={getStyle()} className=\"m-1 \">\r\n                <Card.Body>\r\n                    <Card.Title>{props.title}                     {\r\n                    <ToggleButton className=\"mb-6 float-end\" key={props.index} type=\"checkbox\" id={\"button\" + props.index}  value={props.index} variant=\"outline-primary\" checked={getChecked()}  onChange={(e) => setChecked()}>\r\n                        I'm in\r\n                    </ToggleButton>}</Card.Title>\r\n\r\n                    <Card.Subtitle className=\"mb-2\">{props.recBy}</Card.Subtitle>\r\n                    {((props.recBy === props.username)|| props.username === 'Admin' ) && <Button onClick={() => props.onDelete(props.title)} variant=\"danger\"> Delete </Button>}\r\n                    <OverlayTrigger placement=\"right\" trigger=\"click\" overlay={popover}>\r\n                        <Button className=\"float-end\" variant=\"success\">{votes.length} Votes </Button>\r\n                    </OverlayTrigger>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nDateContainer.defaultProps = { title: 'Date_Title', date: new Date(),  recBy: 'person', votes: [\"unos\", \"dos\", \"tres\"] }\r\n\r\n\r\nexport default DateContainer\r\n"]},"metadata":{},"sourceType":"module"}