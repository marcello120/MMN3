{"version":3,"sources":["components/FilmContainer.js","components/MyNavbar.js","firebase.js","components/DateContainer.js","components/Page.js","components/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["FilmContainer","props","useState","votes","setVotes","useEffect","getChecked","includes","username","popover","Popover","id","Body","map","string","index","Container","className","Card","style","width","backgroundColor","Title","title","ToggleButton","type","value","variant","checked","onChange","e","onVote","Subtitle","recBy","Button","onClick","onDelete","OverlayTrigger","placement","trigger","overlay","length","defaultProps","MyNavbar","console","log","scroll","Navbar","bg","Brand","Toggle","Collapse","Text","color","setScroll","logOut","getFirestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","DateContainer","date","Date","Page","showFilm","setShowFilm","showDate","setShowDate","newFilm","setNewFilm","tempdate","setHours","setMinutes","newDate","setNewDate","localStorage","getItem","filmList","setFilmList","topfilm","setTopFilm","dateList","setDateList","topDate","setTopDate","scrollable","setScrollable","time","setTime","handleCloseFilm","getTempDate","setMilliseconds","addFilm","a","undefined","some","alert","docRef","doc","db","payload","setDoc","addAnotherFilm","handleCloseDate","addDate","month","toLocaleString","nameDay","weekday","getDate","getHours","getMinutes","addAnotherDate","deleteFilm","filmTitle","deleteDoc","deleteDate","dateTitle","doVoteFilm","updateDoc","arrayRemove","doVoteDate","history","useHistory","goToAuth","useCallback","push","getAuthUser","username2FromLocalStorage","onSnapshot","collection","snapshot","templist","docs","data","copylist","maximuum","Math","max","apply","o","found","filter","element","q","query","orderBy","getStyle","maxHeight","removeItem","Row","Col","display","slice","top","film","Modal","show","onHide","Header","closeButton","Form","Group","controlId","Label","Control","autoComplete","target","placeholder","Footer","messWithPicker","Auth","users","setUsers","goToPage","getGang","getDoc","docSnap","exists","setUserName","onSubmit","setItem","preventDefault","FloatingLabel","label","Select","user","App","path","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e193ca2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Button, Card, Popover, OverlayTrigger, ToggleButton, Container } from 'react-bootstrap'\r\n\r\n\r\nconst FilmContainer = (props) => {\r\n    const [votes, setVotes] = useState(props.votes);\r\n\r\n\r\n    useEffect(() => {\r\n        setVotes(props.votes)\r\n    }, [props.votes])\r\n    \r\n\r\n    const setChecked = () => {\r\n        props.onVote(votes, props.title)\r\n    }\r\n\r\n    const getChecked = () => {\r\n        return votes.includes(props.username)\r\n    }\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Body>\r\n                <label> \r\n                    {votes.map((string, index) => (\r\n                        <div key={index}> {string} </div>\r\n                    ))} \r\n                </label>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n\r\n    const getStyle = () => {\r\n        if (!getChecked()){\r\n            return { width: '18rem' }\r\n        }else{\r\n            return {width: '18rem', backgroundColor:'rgba(63, 127, 191, 0.3)' }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className='d-flex justify-content-center'>\r\n            <Card className=\"m-1 \"  style={getStyle()}>\r\n                <Card.Body>\r\n                    <Card.Title style={{ width: '12rem' }}>  {props.title}       \r\n                     </Card.Title>\r\n                    <ToggleButton className=\"m-3 position-absolute top-0 end-0\" key={props.index} type=\"checkbox\" id={\"button\" + props.index}  value={props.index} variant=\"outline-primary\" checked={getChecked()}  onChange={(e) => setChecked()}>\r\n                        I'm in\r\n                    </ToggleButton>\r\n                    <Card.Subtitle className=\"mb-2\">{props.recBy}</Card.Subtitle>\r\n                    {((props.recBy === props.username)|| props.username === 'Admin' ) && <Button onClick={() => props.onDelete(props.title)} variant=\"danger\"> Delete </Button>}\r\n                    <OverlayTrigger placement=\"right\" trigger=\"click\" overlay={popover}>\r\n                        <Button className=\"float-end\" variant=\"success\">{votes.length} Votes </Button>\r\n                    </OverlayTrigger>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nFilmContainer.defaultProps = { title: 'Film_Title', recBy: 'person', votes: [\"unos\", \"dos\", \"tres\"] }\r\n\r\n\r\nexport default FilmContainer\r\n","import React from 'react'\r\nimport { Navbar, Container, Button, Form, ToggleButton } from 'react-bootstrap'\r\n\r\nconst MyNavbar = (props) => {\r\n\r\n    console.log(props.scroll)\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-3\">\r\n            <Container>\r\n                <Navbar.Brand>\r\n                    <div className='m-2'>{props.username} egy buzi!</div>\r\n                    <Navbar.Toggle />\r\n                </Navbar.Brand>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text>\r\n                    <ToggleButton style={{color: 'white'}} className=\"me-3\"  key='scroll' type=\"checkbox\" id='scroll1'  value={props.scroll} variant=\"outline-primary\" checked={props.scroll}  onChange={() => props.setScroll()}>\r\n                        Scroll\r\n                    </ToggleButton>\r\n                        <Button className=\"justify-content-end\" variant=\"danger\" onClick={() => props.logOut()}>Log out</Button>\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n\r\nexport default MyNavbar\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\nimport { getFirestore} from 'firebase/firestore'\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAyYG92saRTL1omZpd7sq9i405fjaGzfn0\",\r\n  authDomain: \"mulatosmovienight.firebaseapp.com\",\r\n  projectId: \"mulatosmovienight\",\r\n  storageBucket: \"mulatosmovienight.appspot.com\",\r\n  messagingSenderId: \"1021226279349\",\r\n  appId: \"1:1021226279349:web:1a7d5ac7c13d382b52b9fc\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default getFirestore();","import React, { useState, useEffect } from \"react\"\r\nimport { Card, Container, ToggleButton, OverlayTrigger, Button, Popover } from \"react-bootstrap\"\r\n\r\nconst DateContainer = (props) => {\r\n\r\n    const [votes, setVotes] = useState(props.votes);\r\n\r\n\r\n    useEffect(() => {\r\n        setVotes(props.votes)\r\n    }, [props.votes])\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Body>\r\n                <label> \r\n                    {votes.map((string, index) => (\r\n                        <div key={index}> {string} </div>\r\n                    ))} \r\n                </label>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n\r\n\r\n    const getChecked = () => {\r\n        return votes.includes(props.username)\r\n    }\r\n\r\n    \r\n    const setChecked = () =>{\r\n        props.onVote(votes, props.title)\r\n    }\r\n\r\n    const getStyle = () => {\r\n        if (!getChecked()){\r\n            return { width: '18rem' }\r\n        }else{\r\n            return {width: '18rem', backgroundColor:'rgba(63, 127, 191, 0.3)' }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className='d-flex justify-content-center'>\r\n            <Card style={getStyle()} className=\"m-1 \">\r\n                <Card.Body>\r\n                    <Card.Title>{props.title}                     {\r\n                    <ToggleButton className=\"mb-6 float-end\" key={props.index} type=\"checkbox\" id={\"button\" + props.index}  value={props.index} variant=\"outline-primary\" checked={getChecked()}  onChange={(e) => setChecked()}>\r\n                        I'm in\r\n                    </ToggleButton>}</Card.Title>\r\n\r\n                    <Card.Subtitle className=\"mb-2\">{props.recBy}</Card.Subtitle>\r\n                    {((props.recBy === props.username)|| props.username === 'Admin' ) && <Button onClick={() => props.onDelete(props.title)} variant=\"danger\"> Delete </Button>}\r\n                    <OverlayTrigger placement=\"right\" trigger=\"click\" overlay={popover}>\r\n                        <Button className=\"float-end\" variant=\"success\">{votes.length} Votes </Button>\r\n                    </OverlayTrigger>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nDateContainer.defaultProps = { title: 'Date_Title', date: new Date(),  recBy: 'person', votes: [\"unos\", \"dos\", \"tres\"] }\r\n\r\n\r\nexport default DateContainer\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport FilmContainer from './FilmContainer';\r\nimport MyNavbar from './MyNavbar';\r\nimport { Button, Navbar, Container, Modal, Form, Row, Col } from 'react-bootstrap';\r\nimport db from '../firebase'\r\nimport firebase from 'firebase';\r\nimport { onSnapshot, collection, setDoc, deleteDoc, updateDoc, doc, arrayRemove, query, orderBy } from 'firebase/firestore';\r\nimport DateContainer from './DateContainer';\r\nimport DateTimePicker from 'react-datetime-picker';\r\n\r\n\r\nconst Page = () => {\r\n\r\n    const [showFilm, setShowFilm] = useState(false);\r\n\r\n    const [showDate, setShowDate] = useState(false);\r\n\r\n    const [newFilm, setNewFilm] = useState('');\r\n\r\n    const [newDate, setNewDate] = useState(() => {\r\n        const tempdate = new Date()\r\n        tempdate.setHours(19)\r\n        tempdate.setMinutes(0)\r\n        console.log(tempdate)\r\n        return tempdate\r\n    });\r\n\r\n    // @ts-ignore\r\n    const [username, setUserName] = useState(localStorage.getItem('MMNusername'))\r\n\r\n    const [filmList, setFilmList] = useState([])\r\n\r\n    const [topfilm, setTopFilm] = useState([]);\r\n\r\n    const [dateList, setDateList] = useState([])\r\n\r\n    const [topDate, setTopDate] = useState([]);\r\n\r\n    const [scrollable,setScrollable] = useState(false);\r\n\r\n    const [time, setTime] = useState(() => {\r\n        const tempdate = new Date()\r\n        tempdate.setHours(19)\r\n        tempdate.setMinutes(0)\r\n        console.log(tempdate)\r\n        return tempdate\r\n    });\r\n\r\n    const messWithPicker = (e) => {\r\n        console.log(e)\r\n        if (!e || !e.type) {\r\n            console.log(\"hello\")\r\n            setTime(e)\r\n            setNewDate(e)\r\n        }\r\n    }\r\n\r\n    const handleCloseFilm = () => {\r\n        setNewFilm(\"\")\r\n        setShowFilm(false);\r\n    }\r\n\r\n\r\n    const getTempDate = () => {\r\n        const tempdate = new Date()\r\n        tempdate.setHours(19)\r\n        tempdate.setMinutes(0)\r\n        tempdate.setMilliseconds(0)\r\n        console.log(tempdate)\r\n        return tempdate\r\n    }\r\n\r\n    const handleShowFilm = () => setShowFilm(true);\r\n\r\n    const addFilm = async () => {\r\n        if (newFilm && newFilm !== undefined && newFilm !== \" \") {\r\n            if(filmList.some(e => e.title === newFilm)){\r\n                alert(\"Film already on list\")\r\n            }else{\r\n                const docRef = doc(db, 'films', newFilm)\r\n                const payload = { recBy: username, votes: [username] }\r\n                await setDoc(docRef, payload)\r\n                setNewFilm(\"\")\r\n                setShowFilm(false);\r\n            }\r\n           \r\n        } else {\r\n            alert(\"enter film name or cancel\")\r\n        }\r\n    }\r\n\r\n    const addAnotherFilm = async () => {\r\n        if (newFilm && newFilm !== undefined && newFilm !== \" \") {\r\n            if(filmList.some(e => e.title === newFilm)){\r\n                alert(\"Film already on list\")\r\n            }else{\r\n                const docRef = doc(db, 'films', newFilm)\r\n                const payload = { recBy: username, votes: [username] }\r\n                await setDoc(docRef, payload)\r\n            }\r\n        } else {\r\n            alert(\"enter film name or cancel\")\r\n        }\r\n    }\r\n\r\n    const handleCloseDate = () => {\r\n        setNewDate(getTempDate())\r\n        setTime(getTempDate())\r\n        setShowDate(false);\r\n    }\r\n\r\n    const handleShowDate = () => setShowDate(true);\r\n\r\n    const negateScroll = () => setScrollable(!scrollable)\r\n\r\n    const addDate = async () => {\r\n        if (newDate && newDate !== undefined) {\r\n            const month = newDate.toLocaleString('default', { month: 'short' })\r\n            const nameDay = newDate.toLocaleString('default', { weekday: 'short' })\r\n            const title = (month + \" \" + newDate.getDate() + \" (\" + nameDay + ') ' + newDate.getHours() + ':' + ((newDate.getMinutes() < 10 ? '0' : '') + newDate.getMinutes()))\r\n            console.log(title)\r\n            if(dateList.some(e => e.title === title)){\r\n                alert(\"Date already on list\")\r\n            }else{\r\n                const docRef = doc(db, 'dates', title)\r\n                const payload = { recBy: username, votes: [username], date: newDate }\r\n                await setDoc(docRef, payload)\r\n                setNewDate(getTempDate())\r\n                setTime(getTempDate())\r\n                setShowDate(false);\r\n            }          \r\n        } else {\r\n            alert(\"enter correct Date or cancel\")\r\n        }\r\n    }\r\n\r\n    const addAnotherDate = async () => {\r\n        if (newDate && newDate !== undefined) {\r\n            const month = newDate.toLocaleString('default', { month: 'short' })\r\n            const nameDay = newDate.toLocaleString('default', { weekday: 'short' })\r\n            const title = (month + \" \" + newDate.getDate() + \" (\" + nameDay + ') ' + newDate.getHours() + ':' + ((newDate.getMinutes() < 10 ? '0' : '') + newDate.getMinutes()))\r\n            console.log(title)\r\n            if(dateList.some(e => e.title === title)){\r\n                alert(\"Date already on list\")\r\n            }else{\r\n                const docRef = doc(db, 'dates', title)\r\n                const payload = { recBy: username, votes: [username], date: newDate }\r\n                await setDoc(docRef, payload)\r\n            }         \r\n        } else {\r\n            alert(\"enter correct Date or cancel\")\r\n        }\r\n    }\r\n    \r\n\r\n    const deleteFilm = async (filmTitle) => {\r\n        if (filmTitle && filmTitle !== undefined && filmTitle !== \" \") {\r\n            const docRef = doc(db, 'films', filmTitle)\r\n            await deleteDoc(docRef)\r\n        } else {\r\n            alert(\"Problem deleting\")\r\n        }\r\n    }\r\n\r\n    const deleteDate = async (dateTitle) => {\r\n        if (dateTitle && dateTitle !== undefined && dateTitle !== \" \") {\r\n            const docRef = doc(db, 'dates', dateTitle)\r\n            await deleteDoc(docRef)\r\n        } else {\r\n            alert(\"Problem deleting\")\r\n        }\r\n    }\r\n\r\n    const doVoteFilm = async (votes, title) => {\r\n\r\n        if (votes.includes(username)) {\r\n            const docRef = doc(db, 'films', title)\r\n            await updateDoc(docRef, {\r\n                votes: arrayRemove(username)\r\n            })\r\n        } else {\r\n            const docRef = doc(db, 'films', title)\r\n            await updateDoc(docRef, {\r\n                votes: [...votes, username]\r\n            })\r\n        }\r\n    }\r\n\r\n    const doVoteDate = async (votes, title) => {\r\n\r\n        if (votes.includes(username)) {\r\n            const docRef = doc(db, 'dates', title)\r\n            await updateDoc(docRef, {\r\n                votes: arrayRemove(username)\r\n            })\r\n        } else {\r\n            const docRef = doc(db, 'dates', title)\r\n            await updateDoc(docRef, {\r\n                votes: [...votes, username]\r\n            })\r\n        }\r\n    }\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('MMNusername')\r\n        goToAuth()\r\n    }\r\n\r\n    const history = useHistory();\r\n    const goToAuth = useCallback(() => history.push('/'), [history]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getAuthUser = async () => {\r\n            const username2FromLocalStorage = localStorage.getItem('MMNusername')\r\n            console.log(username2FromLocalStorage)\r\n            if (username2FromLocalStorage) {\r\n                console.log(\"Auth success\")\r\n            } else {\r\n                console.log(\"Auth fail\")\r\n                goToAuth()\r\n            }\r\n        }\r\n        getAuthUser()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(collection(db, 'films'), (snapshot) => {\r\n            const templist = snapshot.docs.map(doc => ({ ...doc.data(), title: doc.id }))\r\n            setFilmList(templist)\r\n            const copylist = [...templist]\r\n            // @ts-ignore\r\n            const maximuum = Math.max.apply(Math, copylist.map(function (o) { return o.votes.length; }))\r\n            // @ts-ignore\r\n            const found = copylist.filter(element => element.votes.length === maximuum)\r\n            setTopFilm(found)\r\n        });\r\n        return unsub;\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const q = query(collection(db, \"dates\"), orderBy('date'));\r\n        const unsub = onSnapshot(q, (snapshot) => {\r\n            const templist = snapshot.docs.map(doc => ({ ...doc.data(), title: doc.id }))\r\n            setDateList(templist)\r\n            if (templist) {\r\n                const copylist = [...templist]\r\n                // @ts-ignore\r\n                const maximuum = Math.max.apply(Math, copylist.map(function (o) { return o.votes.length; }))\r\n                // @ts-ignore\r\n                const found = copylist.filter(element => element.votes.length === maximuum)\r\n                setTopDate(found)\r\n            }\r\n\r\n        });\r\n        return unsub;\r\n    }, [])\r\n\r\n    const getStyle = () => {\r\n        if (scrollable){\r\n            return { maxHeight:'70vh'}\r\n        }else{\r\n            return {}\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <MyNavbar username={username} setScroll={negateScroll} scroll={scrollable} logOut={logOut}></MyNavbar>\r\n            <Row>\r\n                <Col>\r\n                <div className='text-center mb-2'>\r\n                            <Button className=' btn-lg btn-block' variant=\"success\" onClick={handleShowDate}> Add Time</Button>\r\n                        </div>\r\n                    <div className=\"text-center mb-1\">\r\n                        <div className='border border-success' style={{display: 'inline-block'}}>\r\n                        {topDate.slice(0,3).map((top,index)=>(\r\n                          <h4 key={top.title}>{top.title} </h4>  \r\n                    ))}</div>\r\n                    </div>\r\n                    <Container className='overflow-auto' style={getStyle()}>                       \r\n                        {dateList.map((date, index) => (\r\n                            <DateContainer className=\"border border-primary\" onVote={doVoteDate} onDelete={deleteDate} index={date.title} key={index} title={date.title} recBy={date.recBy} votes={date.votes} username={username} />\r\n                        ))}\r\n                    </Container>\r\n                </Col>\r\n                <Col>\r\n                <div className='text-center mb-2'>\r\n                            <Button className=' btn-lg btn-block' variant=\"success\" onClick={handleShowFilm}> Add Film</Button>\r\n                        </div>\r\n                    <div className=\"text-center mb-1\">\r\n                        <div className='border border-success' style={{display: 'inline-block'}}>\r\n                        {topfilm.slice(0,3).map((top,index)=>(\r\n                          <h4 key={top.title}>{top.title} </h4>  \r\n                    ))}</div>\r\n                    </div>\r\n                    <Container className='overflow-auto' style={getStyle()}>                        \r\n                        {filmList.map((film, index) => (\r\n                            <FilmContainer className=\"border border-primary\" onVote={doVoteFilm} onDelete={deleteFilm} index={film.title} key={index} title={film.title} recBy={film.recBy} votes={film.votes} username={username} />\r\n                        ))}\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal show={showFilm} onHide={handleCloseFilm}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Film</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupFilm\">\r\n                            <Form.Label>Enter Film Name:</Form.Label>\r\n                            <Form.Control autoComplete='off' onChange={(e) => setNewFilm(e.target.value)} type=\"text\" placeholder=\"What are we watching?\" />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Container>\r\n                <Button className='float-start ' variant=\"light\" onClick={addAnotherFilm}>\r\n                        Add Another\r\n                    </Button>\r\n                    <Button variant=\"primary\" className='float-end ms-3' onClick={addFilm}>\r\n                        Slap it on!\r\n                    </Button>   \r\n                    <Button variant=\"secondary\" className='float-end ' onClick={handleCloseFilm}>\r\n                        Back\r\n                    </Button>  \r\n                    </Container>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={showDate} onHide={handleCloseDate}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Date</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupDate\">\r\n                            <Form.Label>Enter New Date:</Form.Label>\r\n                            <Container>\r\n                                <DateTimePicker style={{ color: 'red' }}\r\n                                    onChange={e => messWithPicker(e)}\r\n                                    value={time}\r\n                                />\r\n                            </Container>\r\n\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Container>\r\n                <Button className='float-start ' variant=\"light\" onClick={addAnotherDate}>\r\n                        Add Another\r\n                    </Button>\r\n                    <Button variant=\"primary\" className='float-end ms-3' onClick={addDate}>\r\n                        Slap it on!\r\n                    </Button>   \r\n                    <Button variant=\"secondary\" className='float-end ' onClick={handleCloseDate}>\r\n                        Back\r\n                    </Button>                     \r\n                    </Container>    \r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Page\r\n","// @ts-nocheck\r\nimport { useState, useEffect } from 'react'\r\nimport React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Form, Container, FloatingLabel, } from 'react-bootstrap';\r\nimport db from '../firebase'\r\nimport firebase from 'firebase';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\n\r\n\r\nconst Auth = (props) => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const history = useHistory();\r\n    const goToPage = useCallback(() => history.push('/page'), [history]);\r\n\r\n    useEffect(() => {\r\n        const getAuthUser = async () => {\r\n            const username2FromLocalStorage = localStorage.getItem('MMNusername')\r\n            console.log(username2FromLocalStorage)\r\n            if (!username2FromLocalStorage || username2FromLocalStorage === undefined || username2FromLocalStorage === '') {\r\n                console.log(\"Auth fail\")\r\n            } else {\r\n                console.log(\"Auth success\")\r\n                goToPage()\r\n\r\n            }\r\n        }\r\n        return getAuthUser()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n       return getGang()\r\n    }, [])\r\n\r\n    const getGang = async () => {\r\n        const docRef = doc(db, \"users\", \"users\");\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists()){\r\n            console.log(docSnap.data().users)\r\n            setUsers(docSnap.data().users)\r\n        }\r\n    }\r\n\r\n    const [username2, setUserName2] = useState(localStorage.getItem('username'))\r\n    const [username, setUserName] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        if (!username || username === '' || username === undefined) {\r\n            e.preventDefault()\r\n            alert(\"Who are you?\")\r\n        } else {\r\n            localStorage.setItem(\"MMNusername\", username);\r\n            setUserName(localStorage.getItem('MMNusername'))\r\n            goToPage()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>       \r\n                <Form onSubmit={onSubmit} >\r\n                <div className=\"m-3\">\r\n                    <FloatingLabel controlId=\"floatingSelect\" label=\"Choose your fighter!\">\r\n                        <Form.Select aria-label=\"Floating label select example\" onChange={(e) => setUserName(e.target.value)}>\r\n                            <option></option>\r\n                            {users.map((user, index) => {\r\n                                return (<option key={index} value={user}> {user} </option>)\r\n                            })}\r\n                        </Form.Select>\r\n                    </FloatingLabel>\r\n                    </div>\r\n                    <Button className=\"m-3\" variant=\"success\" type='submit' >Give me the blood!</Button>{' '}\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Auth;","import './App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport Page from './components/Page';\nimport Auth from './components/Auth';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\n\nfunction App() {\n\n  return (\n    <Router>\n        <Route path=\"/\" exact render={(props) => (\n          <>\n            <Auth></Auth>\n          </>\n        )}>\n        </Route>\n        <Route path='/page' component={Page}>\n        </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}